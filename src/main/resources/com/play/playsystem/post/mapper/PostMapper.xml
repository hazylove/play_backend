<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.play.playsystem.post.mapper.PostMapper">
    <select id="count" resultType="java.lang.Long">
        select count(*) from t_post p
        left join user_post_block upb ON p.id = upb.post_id AND upb.user_id = #{userId}
        <include refid="query"/>
    </select>

    <select id="getPostList" resultMap="postMap">
        select
            p.id,
            p.post_title,
            p.post_content,
            p.post_likes_num,
            p.post_blocks_num,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id) as post_favorites_num,
            (select count(*) from t_comment c where c.comment_post_id = p.id) as comment_count,
            (select count(*) from user_post_like upl where upl.post_id = p.id and upl.user_id = #{userId}) as user_liked,
            0 as user_blocked,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id and upf.user_id = #{userId}) as user_favorited,
            p.post_created_id,
            p.post_created_date
        from t_post p
        left join user_post_block upb ON p.id = upb.post_id AND upb.user_id = #{userId}
        <include refid="query"/>
        <include refid="orderSql"/>
        limit #{page},#{pageSize}
    </select>

    <select id="selectById" resultMap="postMap">
        select
            p.id,
            p.post_title,
            p.post_content,
            p.post_likes_num,
            p.post_blocks_num,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id) as post_favorites_num,
            (select count(*) from t_comment c where c.comment_post_id = p.id) as comment_count,
            (select count(*) from user_post_like upl where upl.post_id = p.id and upl.user_id = #{userId}) as user_liked,
            (select count(*) from user_post_block upb where upb.post_id = p.id and upb.user_id = #{userId}) as user_blocked,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id and upf.user_id = #{userId}) as user_favorited,
            p.post_created_id,
            p.post_created_date
        from t_post p
        where p.id = #{id}
    </select>

    <select id="countLikePost" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_post p
        JOIN forum.user_post_like upl on p.id = upl.post_id
        <include refid="likeQuery"/>
    </select>

    <select id="getLikePostList" resultType="com.play.playsystem.post.domain.vo.PostVo">
        select
            p.id,
            p.post_title,
            p.post_content,
            p.post_likes_num,
            p.post_blocks_num,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id) as post_favorites_num,
            (select count(*) from t_comment c where c.comment_post_id = p.id) as comment_count,
            1 as user_liked,
            0 as user_blocked,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id and upf.user_id = #{userId}) as user_favorited,
            p.post_created_id,
            p.post_created_date
        from t_post p
        JOIN forum.user_post_like upl on p.id = upl.post_id
        <include refid="likeQuery"/>
        ORDER BY upl.created_date DESC
        limit #{page},#{pageSize}
    </select>

    <sql id="likeQuery">
        <where>
            <if test="keywords != null and keywords !=''">
                and (p.post_title like concat('%',#{keywords},'%') or p.post_content like concat('%',#{keywords},'%'))
            </if>
            and upl.user_id = #{userId}
        </where>
    </sql>

    <select id="countBlockPost" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_post p
        JOIN forum.user_post_block upb on p.id = upb.post_id
        <include refid="blockQuery"/>
    </select>

    <select id="getBlockPostList" resultType="com.play.playsystem.post.domain.vo.PostVo">
        select
            p.id,
            p.post_title,
            p.post_content,
            p.post_likes_num,
            p.post_blocks_num,
        (select count(*) from user_post_favorite upf where upf.post_id = p.id) as post_favorites_num,
            (select count(*) from t_comment c where c.comment_post_id = p.id) as comment_count,
            0 as user_liked,
            1 as user_blocked,
            (select count(*) from user_post_favorite upf where upf.post_id = p.id and upf.user_id = #{userId}) as user_favorited,
            p.post_created_id,
            p.post_created_date
        from t_post p
        JOIN forum.user_post_block upb on p.id = upb.post_id
        <include refid="blockQuery"/>
        ORDER BY upb.created_date DESC
        limit #{page},#{pageSize}
    </select>

    <sql id="blockQuery">
        <where>
            <if test="keywords != null and keywords !=''">
                and (p.post_title like concat('%',#{keywords},'%') or p.post_content like concat('%',#{keywords},'%'))
            </if>
            and upb.user_id = #{userId}
        </where>
    </sql>

    <select id="countCollectPost" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_post p
        JOIN forum.user_post_favorite upf on p.id = upf.post_id
        <include refid="collectQuery"/>
    </select>

    <select id="getCollectPostList" resultType="com.play.playsystem.post.domain.vo.PostVo">
        select
        p.id,
        p.post_title,
        p.post_content,
        p.post_likes_num,
        p.post_blocks_num,
        (select count(*) from user_post_favorite upf where upf.post_id = p.id) as post_favorites_num,
        (select count(*) from t_comment c where c.comment_post_id = p.id) as comment_count,
        0 as user_liked,
        1 as user_blocked,
        (select count(*) from user_post_favorite upf where upf.post_id = p.id and upf.user_id = #{userId}) as user_favorited,
        p.post_created_id,
        p.post_created_date
        from t_post p
        JOIN forum.user_post_favorite upf on p.id = upf.post_id
        <include refid="collectQuery"/>
        ORDER BY upf.created_date DESC
        limit #{page},#{pageSize}
    </select>

    <sql id="collectQuery">
        <where>
            <if test="keywords != null and keywords !=''">
                and (p.post_title like concat('%',#{keywords},'%') or p.post_content like concat('%',#{keywords},'%'))
            </if>
            and upf.user_id = #{userId}
        </where>
    </sql>

    <sql id="query">
        <where>
            <if test="keywords != null and keywords !=''">
                and (p.post_title like concat('%',#{keywords},'%') or p.post_content like concat('%',#{keywords},'%'))
            </if>
            and upb.post_id IS NULL
        </where>
    </sql>

    <sql id="orderSql">
        <choose>
            <when test="(sortField == 'post_created_date' or sortField == 'post_title') and (sortOrder.toLowerCase() == 'asc' or sortOrder.toLowerCase() == 'desc')">
                <![CDATA[ORDER BY ${sortField} ${sortOrder}]]>
            </when>
            <otherwise>
                ORDER BY post_created_date DESC
            </otherwise>
        </choose>
    </sql>

    <resultMap id="postMap" type="com.play.playsystem.post.domain.vo.PostVo">
        <id property="id" column="id"/>
        <result property="postTitle" column="post_title"/>
        <result property="postContent" column="post_content"/>
        <result property="postLikesNum" column="post_likes_num"/>
        <result property="postBlocksNum" column="post_blocks_num"/>
        <result property="postFavoritesNum" column="post_favorites_num"/>
        <result property="userLiked" column="user_liked"/>
        <result property="userBlocked" column="user_blocked"/>
        <result property="userFavorited" column="user_favorited"/>
        <result property="postCreatedId" column="post_created_id"/>
        <result property="postCreatedDate" column="post_created_date"/>
        <result property="postCommentNum" column="comment_count"/>
    </resultMap>

</mapper>